#include "All_Gimmick.h"
#include "Target_Count.h"
#include "Target_Normal.h"
#include "texture.h"
#include "sprite.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************
static GIMMICK_POS* All_Count_Target = GetMove_Block();
TARGET_COUNT Count[MAX_TARGET_COUNT];

//=============================================================================
// 初期化処理
//=============================================================================
void InitTarget_Count(void)
{
	//回数で壊れるターゲット
	for (int i = 0; i < MAX_TARGET_COUNT; i++)
	{
		Count[i].Tex = LoadTexture("data/TEXTURE/Target.png");
		Count[i].size.x = 70.0f;
		Count[i].size.y = 70.0f;
		Count[i].pos = All_Count_Target[i].count_target_pos;
		Count[i].old_pos = Count[0].pos;
		Count[i].rot = 0.0f;
		Count[i].Count = 3;
		Count[i].use = false;
	}
}

//=============================================================================
// 終了処理
//=============================================================================
void UninitTarget_Count(void)
{

}

//=============================================================================
// 更新処理
//=============================================================================
void UpdateTarget_Count(void)
{
	for (int i = 0; i < MAX_TARGET_COUNT; i++)
	{
		Count[0].old_pos = Count[i].pos;
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void DrawTarget_Count(void)
{
	D3DXCOLOR col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	for (int i = 0; i < MAX_TARGET_COUNT; i++)
	{
		if (Count[i].use)
		{
			DrawSpriteColorRotate(Count[i].Tex,
				Count[i].pos.x, Count[i].pos.y,
				Count[i].size.x, Count[i].size.y,
				0.0f, 0.0f, 1.0f, 1.0f,
				col, Count[i].rot);
		}
	}
}

//=============================================================================
// バレット構造体の先頭アドレスを取得
//=============================================================================
TARGET_COUNT* GetTarget_Count(void)
{
	for (int i = 0; i < MAX_TARGET_COUNT; i++)
	{
		return &Count[i];
	}
}
